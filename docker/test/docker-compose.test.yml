services:
  postgres-test:
    image: postgres:14-alpine
    container_name: physipro-postgres-test
    ports:
      - '5434:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: physipro_test
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    build:
      context: ../..
      dockerfile: docker/test/Dockerfile.test
    container_name: physipro-test
    depends_on:
      postgres-test:
        condition: service_healthy
    environment:
      NODE_ENV: test
      DB_HOST: postgres-test
      DB_PORT: 5432
      DB_NAME: physipro_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: test_jwt_secret
      JWT_EXPIRES_IN: 1h
      TEST_COMMAND: ${TEST_COMMAND:-jest --testPathPattern=integration --runInBand}
    volumes:
      - ../..:/app
      - /app/node_modules
    command: >
      sh -c "
        npm install --no-save --legacy-peer-deps @types/supertest &&
        echo 'Running tests with command: $${TEST_COMMAND}' &&
        $${TEST_COMMAND}
      "
